# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# Copyright (c) 2023 Intel Corporation
#
# -*- coding: utf-8 -*-
#


version: '3'
services:
  dl-base:
    build:
      args:
        BASE_IMAGE: ${BASE_IMAGE:-ubuntu}
        BASE_TAG: ${BASE_TAG:-22.04}
        DEVICE: ${DEVICE:-flex}
        DPNP_VERSION: ${DPNP_VERSION:-0.15.0}
        HOROVOD_VERSION: ${HOROVOD_VERSION:-0.28.1.5}
        ICD_VER: 23.43.27642.52-803~22.04
        IDP_VERSION: ${IDP_VERSION:-2024.2}
        IMPI_VERSION: ${IMPI_VERSION:-2021.13}
        INTEL_CHANNEL: ${INTEL_CHANNEL:-https://software.repos.intel.com/python/conda/}
        IPEX_CPU_VERSION: ${IPEX_CPU_VERSION:-2.3.100}
        IPEX_XPU_VERSION: ${IPEX_XPU_VERSION:-2.1.40}
        ITEX_CPU_VERSION: ${ITEX_CPU_VERSION:-2.15.0}
        ITEX_XPU_VERSION: ${ITEX_XPU_VERSION:-2.15.0.1}
        LEVEL_ZERO_DEV_VER: 1.14.0-744~22.04
        LEVEL_ZERO_GPU_VER: 1.3.27642.52-803~22.04
        LEVEL_ZERO_VER: 1.14.0-744~22.04
        MINIFORGE_VERSION: ${MINIFORGE_VERSION:-Miniforge3-Linux-x86_64}
        MPI_VERSION: ${MPI_VERSION:-2021.13}
        NEURAL_COMPRESSOR_VERSION: ${NEURAL_COMPRESSOR_VERSION:-2.5.1}
        NUMBA_DPEX_VERSION: ${NUMBA_DPEX_VERSION:-0.23.0}
        NUMPY_VERSION: ${NUMPY_VERSION:-1.26.4}
        ONECCL_CPU_VERSION: ${ONECCL_CPU_VERSION:-2.3.0}
        ONECCL_XPU_VERSION: ${ONECCL_XPU_VERSION:-2.1.400}
        PYTHON_VERSION: ${PYTHON_VERSION:-3.9}
        TF_VERSION: ${TF_VERSION:-2.15.1}
        TORCHAUDIO_CPU_VERSION: ${TORCHAUDIO_CPU_VERSION:-2.3.1}
        TORCHAUDIO_XPU_VERSION: ${TORCHAUDIO_XPU_VERSION:-2.1.0}
        TORCHVISION_CPU_VERSION: ${TORCHVISION_CPU_VERSION:-0.18.1}
        TORCHVISION_XPU_VERSION: ${TORCHVISION_XPU_VERSION:-0.16.0}
        TORCH_CPU_VERSION: ${TORCH_CPU_VERSION:-2.3.1}
        TORCH_XPU_VERSION: ${TORCH_XPU_VERSION:-2.1.0}
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ''
      context: ../deep-learning
      labels:
        docs: false
      target: deep-learning-base
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
    network_mode: host
    shm_size: 12GB
    volumes:
      - /dev/dri/by-path:/dev/dri/by-path
    command: >
      bash -c " conda run -n pytorch-cpu python -c 'import torch;print(torch.__version__);import
      intel_extension_for_pytorch as ipex;print(ipex.__version__)' &&

      conda run -n tensorflow-cpu python -c 'import tensorflow as tf;print(tf.__version__)'
      "


  inference-optimization:
    build:
      args:
        COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME:-preset}
      context: .
      target: inference-optimization
      labels:
        docs: inference_optimization
        org.opencontainers.image.title: "IntelÂ® AI Tools Selector Preset Containers - Inference Optimization"
        org.opencontainers.base.name: "intel/deep-learning"
        org.opencontainers.image.name: "intel/inference-optimization"
        org.opencontainers.image.version: 2024.2.0-py${PYTHON_VERSION:-3.9}
        dependency.python: ${PYTHON_VERSION:-3.9}
        dependency.python.pip: requirements.txt
        dependency.apt.apt-utils: true
        dependency.apt.build-essential: true
        dependency.apt.bzip2: true
        dependency.apt.ca-certificates: true
        dependency.apt.clinfo: true
        dependency.apt.cmake: true
        dependency.apt.diffutils: true
        dependency.apt.g++: true
        dependency.apt.gcc: true
        dependency.apt.git: true
        dependency.apt.gnupg2: true
        dependency.apt.gpg-agent: true
        dependency.apt.gzip: true
        dependency.apt.hwinfo: true
        dependency.apt.intel-igc-cm: true
        dependency.apt.intel-level-zero-gpu: true
        dependency.apt.intel-media-va-driver-non-free: true
        dependency.apt.intel-opencl-icd: true
        dependency.apt.level-zero: true
        dependency.apt.level-zero-dev: true
        dependency.apt.libegl1-mesa: true
        dependency.apt.libegl1-mesa-dev: true
        dependency.apt.libegl-mesa0: true
        dependency.apt.libgbm1: true
        dependency.apt.libgl1-mesa-dev: true
        dependency.apt.libgl1-mesa-dri: true
        dependency.apt.libglapi-mesa: true
        dependency.apt.libgles2-mesa-dev: true
        dependency.apt.libglx-mesa0: true
        dependency.apt.libigc-dev: true
        dependency.apt.libigdfcl-dev: true
        dependency.apt.libigdgmm12: true
        dependency.apt.libigfxcmrt-dev: true
        dependency.apt.libmfx1: true
        dependency.apt.libmfxgen1: true
        dependency.apt.libopenmpi-dev: true
        dependency.apt.libvpl2: true
        dependency.apt.make: true
        dependency.apt.mesa-va-drivers: true
        dependency.apt.mesa-vdpau-drivers: true
        dependency.apt.mesa-vulkan-drivers: true
        dependency.apt.numactl: true
        dependency.apt.openmpi-bin: true
        dependency.apt.openmpi-common: true
        dependency.apt.openssh-client: true
        dependency.apt.openssh-server: true
        dependency.apt.patch: true
        dependency.apt.rsync: true
        dependency.apt.sudo: true
        dependency.apt.unzip: true
        dependency.apt.va-driver-all: true
        dependency.apt.vainfo: true
        dependency.apt.wget: true
        dependency.apt.xz-utils: true
        dependency.conda.accelerate: '==0.32.1'
        dependency.conda.colorama: '==0.4.6'
        dependency.conda.conda: '==24.5.0'
        dependency.conda.dpnp: '=0.15.0'
        dependency.conda.intel-extension-for-pytorch_cpu: '=2.3.100'
        dependency.conda.intel-extension-for-pytorch_xpu: '=2.1.40'
        dependency.conda.intel-extension-for-tensorflow_cpu: '=2.15.0=*cpu*'
        dependency.conda.intel-extension-for-tensorflow_xpu: '=2.15.0.1=*xpu*'
        dependency.conda.intel-optimization-for-horovod: '=0.28.1.5'
        dependency.conda.ipykernel: '==6.29.5'
        dependency.conda.jupyterhub: '==5.1.0'
        dependency.conda.jupyter-server-proxy: '==4.3.0'
        dependency.conda.kernda: '==0.3.0'
        dependency.conda.ld_impl_linux-64: '==2.40'
        dependency.conda.mamba: '==1.5.8'
        dependency.conda.matplotlib-base: '>=3.8.4'
        dependency.conda.mpi: '==1.0'
        dependency.conda.mpich: '==4.2.2'
        dependency.conda.networkx: '==3.3'
        dependency.conda.neural-compressor: '=2.5.1'
        dependency.conda.notebook: '==7.2.1'
        dependency.conda.oneccl_bind_pt_cpu: '=2.3.0'
        dependency.conda.oneccl_bind_pt_xpu: '=2.1.400'
        dependency.conda.onnx: '>=1.14.1'
        dependency.conda.onnxruntime: '==1.18.1'
        dependency.conda.py-cpuinfo: '==9.0.0'
        dependency.conda.python: '==3.10.14'
        dependency.conda.pytorch_cpu: '=2.3.1'
        dependency.conda.pytorch_xpu: '=2.1.0'
        dependency.conda.scikit-learn: '>=1.5.0'
        dependency.conda.tensorboardx: '==2.6.2.2'
        dependency.conda.tensorflow: '=2.15.1'
        dependency.conda.tensorflow-hub: '==0.16.1'
        dependency.conda.tf2onnx: '==1.16.1'
        dependency.conda.torchaudio_cpu: '=2.3.1'
        dependency.conda.torchaudio_xpu: '=2.1.0'
        dependency.conda.torchvision_cpu: '=0.18.1'
        dependency.conda.torchvision_xpu: '=0.16.0'
        dependency.conda.tqdm: '==4.66.4'
    depends_on:
      - dl-base
    extends: dl-base
    image: ${REGISTRY}/${REPO}:b-${GITHUB_RUN_NUMBER:-0}-inference-optimization-${RELEASE:-2024.2.0}-py${PYTHON_VERSION:-3.9}
    command: >
      bash -c "conda run -n pytorch-cpu python -c 'import intel_extension_for_pytorch
      as ipex;print(ipex.__version__)'  &&

      conda run -n pytorch-cpu python -c 'import neural_compressor;print(\"Neural
      Compressor Version:\", neural_compressor.__version__)'  &&

      conda run -n pytorch-gpu python -c 'import torch;print(torch.device(\"xpu\"));import
      intel_extension_for_pytorch as ipex;print(ipex.xpu.is_available())'  &&

      conda run -n pytorch-gpu python -c 'import neural_compressor;print(\"Neural
      Compressor Version:\", neural_compressor.__version__)'  &&

      conda run -n tensorflow-cpu python -c 'import intel_extension_for_tensorflow
      as itex;print(itex.__version__)'  &&

      conda run -n tensorflow-cpu python -c 'import neural_compressor, tf2onnx;print(\"\nNeural
      Compressor Version:\", neural_compressor.__version__)';print(\"\nTensorFlow2ONNX
      Version:\", tf2onnx.__version__)'  &&

      conda run -n tensorflow-gpu python -c 'from tensorflow.python.client import
      device_lib;print(device_lib.list_local_devices())'  &&

      conda run -n tensorflow-gpu python -c 'import neural_compressor, tf2onnx;print(\"\\nNeural
      Compressor Version:\", neural_compressor.__version__)';print(\"\\TensorFlow2ONNX
      Version:\", tf2onnx.__version__)'  "
