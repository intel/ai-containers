# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# Copyright (c) 2023 Intel Corporation
#
# -*- coding: utf-8 -*-
#

# ERASE COMMENTS FROM HERE

version: '3'
services:
  dl-base:
    build:
      args:
        BASE_IMAGE: ${BASE_IMAGE:-ubuntu}
        BASE_TAG: ${BASE_TAG:-22.04}
        DEEPSPEED_VERSION: ${DEEPSPEED_VERSION:-0.15.3}
        DEVICE: ${DEVICE:-flex}
        DPNP_VERSION: ${DPNP_VERSION:-0.16.0*}
        ICD_VER: 23.43.27642.67-803.126~22.04
        IDP_VERSION: ${IDP_VERSION:-2025.0.*}
        INTEL_CHANNEL: ${INTEL_CHANNEL:-https://software.repos.intel.com/python/conda/}
        INTEL_PTI_VERSION: ${INTEL_PTI_VERSION:-0.10.*}
        IPEX_XPU_VERSION: ${IPEX_XPU_VERSION:-2.6.10}
        LEVEL_ZERO_DEV_VER: 1.14.0-803.123~22.04
        LEVEL_ZERO_GPU_VER: 1.3.27642.67-803.126~22.04
        LEVEL_ZERO_VER: 1.14.0-803.123~22.04
        MINIFORGE_VERSION: ${MINIFORGE_VERSION:-Miniforge3-Linux-x86_64}
        NEURAL_COMPRESSOR_VERSION: ${NEURAL_COMPRESSOR_VERSION:-3.2}
        NUMPY_VERSION: ${NUMPY_VERSION:-1.26.4}
        ONECCL_XPU_VERSION: ${ONECCL_XPU_VERSION:-2.6.0}
        PYTHON_VERSION: ${PYTHON_VERSION:-3.11}
        TORCHAUDIO_XPU_VERSION: ${TORCHAUDIO_XPU_VERSION:-2.6.0}
        TORCHVISION_XPU_VERSION: ${TORCHVISION_XPU_VERSION:-0.21.0}
        TORCH_XPU_VERSION: ${TORCH_XPU_VERSION:-2.6.0}
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ''
      context: .
      labels:
        docs: false
      target: deep-learning-base
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
    network_mode: host
    shm_size: 12GB
    volumes:
      - /dev/dri/by-path:/dev/dri/by-path
    command: >
      bash -c "
      conda info -e
      &&
      conda config --show channels
      "

####################################
####################################

  deep-learning:
    build:
      target: deep-learning
      labels:
        docs: deep_learning_pytorch_gpu
        org.opencontainers.image.title: "AI Tools Selector Preset Containers - Deep Learning PyTorch* GPU"
        org.opencontainers.base.name: "ubuntu:22.04"
        org.opencontainers.image.name: "intel/deep-learning"
        org.opencontainers.image.version: pytorch-gpu-latest-py${PYTHON_VERSION:-3.11}
        dependency.python: ${PYTHON_VERSION:-3.11}
        dependency.python.pip: requirements.txt
        dependency.apt.apt-utils: true
        dependency.apt.build-essential: true
        dependency.apt.bzip2: true
        dependency.apt.ca-certificates: true
        dependency.apt.clinfo: true
        dependency.apt.cmake: true
        dependency.apt.g++: true
        dependency.apt.gcc: true
        dependency.apt.git: true
        dependency.apt.gnupg2: true
        dependency.apt.gpg-agent: true
        dependency.apt.gzip: true
        dependency.apt.hwinfo: true
        dependency.apt.intel-igc-cm: true
        dependency.apt.intel-level-zero-gpu: true
        dependency.apt.intel-media-va-driver-non-free: true
        dependency.apt.intel-opencl-icd: true
        dependency.apt.level-zero: true
        dependency.apt.level-zero-dev: true
        dependency.apt.libegl1-mesa: true
        dependency.apt.libegl1-mesa-dev: true
        dependency.apt.libegl-mesa0: true
        dependency.apt.libgbm1: true
        dependency.apt.libgl1-mesa-dev: true
        dependency.apt.libgl1-mesa-dri: true
        dependency.apt.libglapi-mesa: true
        dependency.apt.libgles2-mesa-dev: true
        dependency.apt.libglx-mesa0: true
        dependency.apt.libigc-dev: true
        dependency.apt.libigdfcl-dev: true
        dependency.apt.libigdgmm12: true
        dependency.apt.libigfxcmrt-dev: true
        dependency.apt.libmfx1: true
        dependency.apt.libmfxgen1: true
        dependency.apt.libopenmpi-dev: true
        dependency.apt.libvpl2: true
        dependency.apt.make: true
        dependency.apt.mesa-va-drivers: true
        dependency.apt.mesa-vdpau-drivers: true
        dependency.apt.mesa-vulkan-drivers: true
        dependency.apt.numactl: true
        dependency.apt.openmpi-bin: true
        dependency.apt.openmpi-common: true
        dependency.apt.openssh-client: true
        dependency.apt.openssh-server: true
        dependency.apt.patch: true
        dependency.apt.rsync: true
        dependency.apt.unzip: true
        dependency.apt.va-driver-all: true
        dependency.apt.vainfo: true
        dependency.apt.wget: true
        dependency.apt.xz-utils: true
        dependency.conda.accelerate: '==0.32.1'
        dependency.conda.conda: '==24.11.0'
        dependency.conda.dpnp: '==0.16.0'
        dependency.conda.intel-extension-for-pytorch_xpu: '==2.6.10'
        dependency.conda.ipykernel: '==6.29.5'
        dependency.conda.kernda: '==0.3.0'
        dependency.conda.matplotlib-base: '==3.10.1'
        dependency.conda.oneccl_bind_pt_xpu: '==2.6.0'
        dependency.conda.python: '==3.11.9'
        dependency.conda.pytorch_xpu: '==2.6.0'
        dependency.conda.tensorboardx: '==2.6.2.2'
        dependency.conda.torchaudio_xpu: '==2.6.0'
        dependency.conda.torchvision_xpu: '==0.21.0'
    depends_on:
      - dl-base
    extends: dl-base
    image: ${REGISTRY}/${REPO}:b-${GITHUB_RUN_NUMBER:-0}-deep-learning-pytorch-gpu-${RELEASE:-2025.1.0}-py${PYTHON_VERSION:-3.11}
    command: >
      bash -c "
      conda run -n pytorch-gpu python -c 'import torch;print(torch.__version__);import intel_extension_for_pytorch as ipex;print(ipex.__version__);'
      &&
      conda run -n pytorch-gpu bash -c 'mpirun --version'
      &&
      conda run -n pytorch-gpu python -c 'import oneccl_bindings_for_pytorch as oneccl;print(\"\\nOneCCL:\", oneccl.__version__)'
      "
