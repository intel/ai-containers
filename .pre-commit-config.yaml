ci:
  autofix_commit_msg: "[pre-commit.ci] auto fixes from pre-commit.com hooks"
  autofix_prs: true
  autoupdate_commit_msg: "[pre-commit.ci] pre-commit autoupdate"
  autoupdate_schedule: "weekly"
  skip: [pylint, shellcheck, markdownlint, hadolint-docker, helm-docs-container, shfmt, tox, mkdocs, ct]
repos:
- hooks:
  - id: check-added-large-files
  - id: check-ast
  - id: check-merge-conflict
  - id: debug-statements
  - id: end-of-file-fixer
  - id: forbid-submodules
  - id: sort-simple-yaml
  - id: trailing-whitespace
  repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.6.0
- hooks:
  - id: gitleaks
  repo: https://github.com/gitleaks/gitleaks
  rev: v8.18.4
- hooks:
  - args: [--license-filepath=.github/license_template.txt, --use-current-year, --detect-license-in-X-top-lines=40, --skip-license-insertion-comment=Copyright]
    files: |
      (?x)^(
        .*(py|yaml|yml|sh|Dockerfile)|
      )$
    id: insert-license
  repo: https://github.com/Lucas-C/pre-commit-hooks
  rev: v1.5.5
- hooks:
  - args: ["--config", ".github/linters/.hadolint.yaml"]
    id: hadolint-docker
  repo: https://github.com/hadolint/hadolint
  rev: v2.13.0-beta
- hooks:
  - args: ["--config", ".github/linters/.markdown-lint.yaml"]
    id: markdownlint
  repo: https://github.com/igorshubovych/markdownlint-cli
  rev: v0.41.0
- hooks:
  - id: shellcheck
  repo: https://github.com/koalaman/shellcheck-precommit
  rev: v0.10.0
- hooks:
  - args: ["--config-file", ".github/linters/actionlint.yml"]
    id: actionlint
  repo: https://github.com/rhysd/actionlint
  rev: v1.7.1
- hooks:
  - id: helm-docs-container
  repo: https://github.com/norwoodj/helm-docs
  rev: v1.13.1
- hooks:
  - id: shfmt
  repo: https://github.com/cisagov/pre-commit-shfmt
  rev: v0.0.2
- hooks:
  - id: black
  repo: https://github.com/ambv/black
  rev: 24.4.2
- hooks:
  - args: ["--sp", ".github/linters"]
    id: isort
  repo: https://github.com/pycqa/isort
  rev: 5.13.2
- hooks:
  - args: ["--rcfile=.github/linters/.python-lint"]
    entry: pylint
    id: pylint
    language: system
    name: pylint
    types: [python]
  - entry: bash -c "python -m tox -e py310,clean"
    files: ^test-runner/
    id: tox
    language: system
    name: tox
  - entry: bash -c "rm -rf site/ && mkdocs build --clean"
    # files: ^docs/
    id: mkdocs
    language: system
    name: mkdocs
  - entry: ct lint --config .github/ct.yaml
    files: ^workflows/charts/
    id: ct
    language: system
    name: ct
  repo: local
