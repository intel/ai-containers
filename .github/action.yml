# Copyright (c) 2024 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
name: Build Container Group
description: Given the inputs found below, build all containers found in a docker-compose.yaml file for a given configuration
author: tyler.titsworth@intel.com
inputs:
  group_dir:
    description: Directory with docker-compose.yaml to build
    required: true
    type: string
  env_overrides:
    description: Bash Env Variable Overrides in `KEY=VAL && KEY2=VAL2` format
    required: false
    type: string
  registry:
    description: Container Registry URL
    required: false
    default: 'intel'
    type: string
  repo:
    description: Container Project Repository
    required: false
    default: 'ai-containers'
    type: string
  no-push:
    description: Do not push to Registry
    required: false
    default: false
    type: boolean
  no-start:
    description: Do not start containers after building them
    required: false
    default: false
    type: boolean
runs:
  using: composite
  steps:
    - name: Generate Project Number
      shell: bash
      run: echo "project-number=$(shuf -i 0-10000 -n1)" >> $GITHUB_ENV
    - name: Build Containers
      shell: bash
      if: ${{ !fromJson(inputs.no-start) }}
      run: |
        REGISTRY=${{ inputs.registry }} \
        REPO=${{ inputs.repo }} \
        COMPOSE_PROJECT_NAME=${{ env.project-number }} \
        ${{ inputs.env_overrides }} docker compose -p ${{ env.project-number }} up --build --force-recreate --always-recreate-deps
      working-directory: ${{ inputs.group_dir }}
    - name: Build Containers
      shell: bash
      if: ${{ fromJson(inputs.no-start) }}
      run: |
        REGISTRY=${{ inputs.registry }} \
        REPO=${{ inputs.repo }} \
        COMPOSE_PROJECT_NAME=${{ env.project-number }} \
        ${{ inputs.env_overrides }} docker compose -p ${{ env.project-number }} up --build --force-recreate --always-recreate-deps --no-start
      working-directory: ${{ inputs.group_dir }}
    - name: Push Containers
      shell: bash
      if: ${{ !fromJson(inputs.no-push) }}
      run: |
        REGISTRY=${{ inputs.registry }} \
        REPO=${{ inputs.repo }} \
        COMPOSE_PROJECT_NAME=${{ env.project-number }} \
        ${{ inputs.env_overrides }} docker compose -p ${{ env.project-number }} push
      working-directory: ${{ inputs.group_dir }}
    - name: Un-Tag Containers
      if: ${{ always() }}
      shell: bash
      run: |
        REGISTRY=${{ inputs.registry }} \
        REPO=${{ inputs.repo }} \
        COMPOSE_PROJECT_NAME=${{ env.project-number }} \
        ${{ inputs.env_overrides }} docker compose -p ${{ env.project-number }} down --rmi all
      working-directory: ${{ inputs.group_dir }}
    - name: Remove Containers
      if: ${{ always() }}
      shell: bash
      run: docker system prune --force
