# Copyright (c) 2024 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Container CI
permissions: read-all
on:
  workflow_dispatch:
    inputs:
      group_dir:
        required: true
        description: 'Enter Container Group Directory:'
        type: string
      env_overrides:
        description: 'Enter Bash Env Variable Overrides in `KEY=VAL KEY2=VAL2` format:'
        required: false
        type: string
      ref:
        description: 'Enter Git Ref:'
        required: true
        default: 'main'
        type: string
      runner_label:
        description: 'Enter Validation Runner Label:'
        default: test-runner
        required: true
        type: string
      no_build:
        description: No build
        default: false
        required: true
        type: boolean
      no_push:
        description: Do not push to Registry
        required: true
        default: false
        type: boolean
      no_start:
        description: No Start
        default: false
        required: true
        type: boolean
  workflow_call:
    inputs:
      group_dir:
        required: true
        type: string
      no_push:
        required: false
        type: boolean
      no_start:
        required: false
        type: boolean
      ref:
        required: true
        type: string
jobs:
  ####################################################################################################
  # Compose Build
  ####################################################################################################
  setup-build:
    outputs:
      matrix: ${{ steps.build-matrix.outputs.matrix }}
    runs-on: ubuntu-latest
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        ref: ${{ inputs.ref }}
    - name: Set Matrix
      id: build-matrix
      run: echo "matrix=$(jq -c . < ${{ inputs.group_dir }}/.actions.json)" >> $GITHUB_OUTPUT
    - name: Print Inputs
      if: ${{ inputs.env_overrides }}
      run: echo "Overrides - ${{ inputs.env_overrides }}" >> $GITHUB_STEP_SUMMARY
  build-containers:
    needs: [setup-build]
    env: ${{ matrix }}
    runs-on: k8-runners
    strategy:
      matrix: ${{ fromJson(needs.setup-build.outputs.matrix) }}
      fail-fast: false
    steps:
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        ref: ${{ inputs.ref }}
      if: ${{ !inputs.no_build }}
    - uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
      with:
        registry: ${{ secrets.REGISTRY }}
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_TOKEN }}
      if: ${{ !inputs.no_build }}
    - name: Build Container Group
      if: ${{ !inputs.no_build }}
      id: build-group
      uses: intel/ai-containers/.github@main
      with:
        group_dir: ${{ inputs.group_dir }}
        env_overrides: ${{ inputs.env_overrides || env.env_overrides || '' }}
        registry: ${{ secrets.REGISTRY }}
        repo: ${{ secrets.REPO }}
        no-push: ${{ inputs.no_push }}
        no-start: ${{ inputs.no_start }}
        ####################################################################################################
        # Generic Test Runner
        ####################################################################################################
  setup-test:
    needs: [build-containers]
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.test-matrix.outputs.matrix }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        ref: ${{ inputs.ref }}
    - name: Get Recipes
      id: test-matrix
      run: echo "matrix=$(find ${{ inputs.group_dir }} -type f -name 'tests.yaml' -exec dirname {} \; | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT
  test-containers:
    needs: [setup-build, setup-test]
    if: ${{ needs.setup-test.outputs.matrix != '[]' }}
    runs-on: [self-hosted, Linux, "${{ inputs.runner_label || fromJson(needs.setup-build.outputs.matrix).runner_label }}"]
    strategy:
      matrix:
        tests: ${{ fromJson(needs.setup-test.outputs.matrix) }}
        experimental: [true]
      fail-fast: false
    steps:
    - uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
      with:
        egress-policy: audit
    - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      with:
        ref: ${{ inputs.ref }}
    - uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
      with:
        registry: ${{ secrets.REGISTRY }}
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_TOKEN }}
    - name: Test Container Group
      uses: intel/ai-containers/test-runner@main
      with:
        cache_registry: ${{ secrets.CACHE_REGISTRY }}
        perf_repo: ${{ secrets.PERF_REPO }}
        recipe_dir: ${{ inputs.group_dir }}
        registry: ${{ secrets.REGISTRY }}
        repo: ${{ secrets.REPO }}
        test_dir: ${{ matrix.tests }}
        token: ${{ secrets.PERF_TOKEN }}
