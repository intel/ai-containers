name: Tensorflow Serving Container Build
on: 
  workflow_dispatch:
    inputs:
      base_image_tag:
        default: "20.04"
        required: false
        type: string
      bazel_version:
        default: "5.4.0"
        required: false
        type: string
      tf_package_version:
        default: "2.12.0"
        required: false
        type: string
      tf_bazel_options:
        default: "--local_ram_resources=HOST_RAM*0.8 --local_cpu_resources=HOST_CPUS-4"
        required: true
        type: string
      tf_serving_build_options:
        description: "Build Option excluding '--copt-=march='"
        default: "--config=mkl --config=release --define=build_with_openmp=false"
        required: true
        type: string
      other_version: 
        required: false
        type: string

jobs:
  base-build:
    container:
      image: ${{ vars.REGISTRY }}/aiops/compose-dev
      env:
        http_proxy: ${{ secrets.HTTP_PROXY }}
        https_proxy: ${{ secrets.HTTPS_PROXY }}
        no_proxy: ${{ secrets.NO_PROXY }}
      credentials:
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_TOKEN }}
    strategy:
      matrix:
        tf_package: ["intel-tensorflow", "intel-tensorflow-avx512"]
        experimental: [ true ]
      fail-fast: false
    runs-on: [ aia-devops ]
    steps: 
    - uses: actions/checkout@v4
      with:
        submodules: true
        set-safe-directory: true
    - uses: docker/login-action@v3
      with:
        username: ${{ secrets.HUB_USER }}
        password: ${{ secrets.HUB_TOKEN }}
    - uses: docker/login-action@v3
      with:
        registry: ${{ vars.REGISTRY }}
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_TOKEN }}
    - name: Remove Containers
      run: docker compose down
      working-directory: tensorflow
    - if: matrix.tf_package == "intel-tensorflow-avx512"
      name: Build Framework Ingredient Containers
      run: |
        BASE_IMAGE_TAG=${{ github.event.inputs.base_image_tag }} \
        BAZEL_VERSION=${{ github.event.inputs.bazel_version }} \
        REGISTRY=${{ vars.REGISTRY }} \
        TF_PACKAGE=${{ matrix.tf_package }} \
        TF_SERVING_BAZEL_OPTIONS=${{ github.event.inputs.tf_bazel_options }} \
        TF_SERVING_BUILD_OPTION="${{ github.event.inputs.tf_serving_build_options }} --copt=-march=skylake-avx512" \
        TF_SERVING_VERSION=${{ github.event.inputs.tf_package_version }} \
        ${{ github.event.input.other_version }} docker compose -f docker-compose-serving.yaml build --no-cache
      working-directory: tensorflow
    - if: matrix.tf_package == "intel-tensorflow"
      name: Build Framework Ingredient Containers
      run: |
        BASE_IMAGE_TAG=${{ github.event.inputs.base_image_tag }} \
        BAZEL_VERSION=${{ github.event.inputs.bazel_version }} \
        TF_PACKAGE=${{ matrix.tf_package }} \
        TF_SERVING_BAZEL_OPTIONS=${{ github.event.inputs.tf_bazel_options }} \
        TF_SERVING_BUILD_OPTION="${{ github.event.inputs.tf_serving_build_options }} --copt=-march=native" \
        TF_SERVING_VERSION=${{ github.event.inputs.tf_package_version }} \
        ${{ github.event.input.other_version }} docker compose -f docker-compose-serving.yaml build --no-cache
      working-directory: tensorflow
    - name: Push Framework Ingredient Containers
      run: |
        BASE_IMAGE_TAG=${{ github.event.inputs.base_image_tag }} \
        TF_PACKAGE=${{ matrix.tf_package }} \
        TF_SERVING_VERSION=${{ github.event.inputs.tf_package_version }} \
        ${{ github.event.input.other_version }} docker compose -f docker-compose-serving.yaml push serving-mkl
      working-directory: tensorflow

