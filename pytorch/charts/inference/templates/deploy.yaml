apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
spec:
  replicas: {{ .Values.deploy.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
        - name: torchserve
          image: {{ .Values.deploy.image }}
          args:
            - 'torchserve'
            - '--start'
            - '--ts-config'
            - {{ .Values.deploy.modelConfig }}
            - '--model-store'
            - 'store'
            - '--workflow-store'
            - 'store'
            - '--models'
            - {{ .Values.deploy.models }}
          ports:
            - name: rest-1
              containerPort: 8080
            - name: rest-2
              containerPort: 8081
            - name: rest-3
              containerPort: 8082
            - name: grpc-1
              containerPort: 7070
            - name: grpc-2
              containerPort: 7071
          volumeMounts:
            - name: model
              mountPath: /home/model-server/store
              {{- if and .Values.deploy.storage.nfs.enable (ne .Values.deploy.storage.nfs.subPath "nil") }}
              subPath: {{ .Values.deploy.storage.nfs.subPath }}
              {{- else if and .Values.deploy.storage.pvc.enable (ne .Values.deploy.storage.pvc.subPath "nil") }}
              subPath: {{ .Values.deploy.storage.pvc.subPath }}
              {{- end }}
          resources:
            requests:
              cpu: {{ .Values.deploy.resources.requests.cpu }}
              memory: {{ .Values.deploy.resources.requests.memory }}
            limits:
              cpu: {{ .Values.deploy.resources.limits.cpu }}
              memory: {{ .Values.deploy.resources.limits.memory }}
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      volumes:
        - name: model
          {{- if .Values.deploy.storage.nfs.enable }}
          nfs:
            server: {{ .Values.deploy.storage.nfs.server }}
            path: {{ .Values.deploy.storage.nfs.path }}
            readOnly: {{ .Values.deploy.storage.nfs.readOnly }}
          {{- else if .Values.deploy.storage.s3.enable }}
          hostPath:
            path: {{ .Values.deploy.storage.s3.path }}
          {{- else if .Values.deploy.storage.pvc.enable }}
          persistentVolumeClaim:
            claimName: {{ .Values.deploy.storage.pvc.claimName }}
          {{- else }}
          emptyDir: {}
          {{- end }}
